{"version":3,"sources":["Getprices.js","SBox.js","App.js","index.js"],"names":["Getprices","props","Prices","prices","map","item","index","Card","href","as","Content","Meta","data","category_name","Header","model","Description","Label","color","size","Container","fluid","Segment","Group","stackable","centered","SBox","useState","searchdata","setSearchdata","isLoading","setLoading","results","setResults","cval","useRef","_","debounce","val","document","title","re","RegExp","escapeRegExp","res","filter","result","name","test","replace","price","current","Grid","Column","largeScreen","mobile","textAlign","Search","value","onSearchChange","e","loading","App","initialPrices","parseInt","load","sub","ReactDOM","render","getElementById"],"mappings":"0iuBAqCiBA,MA7Bf,SAAmBC,GAEjB,SAASC,EAAOD,GACd,OACEA,EAAME,OAAOC,KAAI,SAACC,EAAMC,GAEtB,OACA,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAIC,GAAG,KAChB,kBAACF,EAAA,EAAKG,QAAN,KACA,kBAACH,EAAA,EAAKI,KAAN,KAAYC,EAAKN,GAAOO,eACtB,kBAACN,EAAA,EAAKO,OAAN,KAAcF,EAAKN,GAAOS,OAC1B,kBAACR,EAAA,EAAKS,YAAN,KAAkB,kBAACC,EAAA,EAAD,CAAOC,MAAO,QAASC,KAAM,SAA7B,SAAwCd,SAOpE,OACE,kBAACe,EAAA,EAAD,CAAWC,OAAK,GAChB,kBAACC,EAAA,EAAD,KACA,kBAACf,EAAA,EAAKgB,MAAN,CAAYC,WAAS,EAACC,UAAQ,GAC9B,kBAACvB,EAAWD,O,kBCQHyB,MAhCf,SAAczB,GAAO,IAAD,EAEoB0B,mBAAS,IAF7B,mBAETC,EAFS,KAEGC,EAFH,OAGgBF,oBAAS,GAHzB,mBAGTG,EAHS,KAGEC,EAHF,OAIcJ,mBAAS,CAAC,CAAC,MAAS,UAJlC,mBAITK,EAJS,KAIAC,EAJA,KAKVC,EAAOC,iBAAOC,IAAEC,UAAS,SAACC,GAC5BC,SAASC,MAAQF,EAAM,YAAcA,EAAM,GAC3CP,GAAW,GACX,IAAMU,EAAK,IAAIC,OAAON,IAAEO,aAAaL,GAAM,KAErCM,EAAMR,IAAES,OAAOjC,GAAM,SAACP,GAAD,OADVyC,EAC4BzC,EAAK0C,KADtBN,EAAGO,KAAKF,EAAOG,QAAQ,IAAK,MAAxC,IAACH,KACwC1C,KAAI,SAACC,GAAU,MAAO,CAAC,MAASA,EAAKU,MAAO,MAAS,SAAMV,EAAK6C,UACzHjB,EAAWW,KAEZ,MAAMO,QAUT,OAAO,kBAACC,EAAA,EAAD,CAAM3B,UAAQ,GAAd,IAAgB,kBAAC2B,EAAA,EAAKC,OAAN,CAAaC,YAAa,EAAGC,OAAQ,GAAIC,UAAU,UAClE,kBAACC,EAAA,EAAD,CAAQpC,OAAK,EACTqC,MAAO9B,EACP+B,eAVS,SAACC,EAAD,GAAiB,IAAZF,EAAW,EAAXA,MACtB7B,EAAc6B,GACd3B,GAAW,GACXG,EAAKwB,IAQGG,QAAS/B,EACTE,QAASA,IALE,KAAhB,OCAI8B,MArBf,WAEE,IAAMC,EAAgBnD,EAAKR,KAAI,SAACC,GAC9B,OAAO2D,SAAS3D,EAAK6C,MAAMD,QAAQ,IAAK,QAH7B,EAKetB,mBAASoC,GALxB,mBAKN5D,EALM,aAMWwB,oBAAS,IANpB,mBAMNsC,EANM,KAaX,OAbW,KAeT,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAW9D,OAAQA,EAAQ+D,KAAK,EAAMD,KAAMA,IAF5C,MCpBNE,IAASC,OACL,kBAAC,EAAD,MAAS7B,SAAS8B,eAAe,W","file":"static/js/main.bdcffeb3.chunk.js","sourcesContent":["  import React from 'react';\r\n  import _ from 'lodash';\r\n  import 'semantic-ui-css/semantic.min.css';\r\n  import {Card, Segment, Container, Label} from 'semantic-ui-react';\r\n  import data from './my.json';\r\n\r\n\r\n\r\n  function Getprices(props) {\r\n\r\n    function Prices(props) {\r\n      return (\r\n        props.prices.map((item, index) => {\r\n        \r\n          return (\r\n          <Card href=\"#\" as=\"a\">\r\n            <Card.Content>\r\n            <Card.Meta>{data[index].category_name}</Card.Meta>\r\n              <Card.Header>{data[index].model}</Card.Header>\r\n              <Card.Description><Label color={'green'} size={'large'}>₹{item}</Label></Card.Description>\r\n            </Card.Content>\r\n          </Card>\r\n      );\r\n      }));\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n      <Segment>\r\n      <Card.Group stackable centered>\r\n      <Prices {...props} />\r\n      </Card.Group>\r\n      </Segment>\r\n      </Container>\r\n      )\r\n  }\r\n\r\n  export default Getprices;","import React, {useState, useRef} from 'react';\r\nimport _ from 'lodash';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Search, Grid} from 'semantic-ui-react';\r\nimport data from './my.json';\r\n\r\nfunction SBox(props){\r\n\r\n    const [searchdata, setSearchdata] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [results, setResults] = useState([{\"title\": \"test\"}]);\r\n    const cval = useRef(_.debounce((val) => {\r\n        document.title = val ? \"Search - \" + val : \"\";\r\n        setLoading(false);\r\n        const re = new RegExp(_.escapeRegExp(val), 'i');\r\n        const isMatch = (result) => re.test(result.replace('-', ' '));\r\n        const res = _.filter(data, (item) => isMatch(item.name)).map((item) => {return {'title': item.model, 'price': \"₹\" + item.price}});\r\n        setResults(res);\r\n\r\n    }, 500)).current\r\n\r\n\r\n    const handleSearch = (e, {value}) => {\r\n        setSearchdata(value);\r\n        setLoading(true);\r\n        cval(value);\r\n    }\r\n\r\n\r\n    return <Grid centered> <Grid.Column largeScreen={3} mobile={12} textAlign=\"center\"> \r\n            <Search fluid\r\n                value={searchdata} \r\n                onSearchChange={handleSearch} \r\n                loading={isLoading}  \r\n                results={results}\r\n            /> </Grid.Column>  </Grid>\r\n}\r\n\r\nexport default SBox;\r\n","import React, {useState, useEffect} from 'react';\r\nimport data from './my.json';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './my.css'\r\nimport Getprices from './Getprices'\r\nimport SBox from './SBox'\r\n\r\n\r\nfunction App() {\r\n\r\n  const initialPrices = data.map((item) => {\r\n    return parseInt(item.price.replace(',', ''))\r\n  })\r\n  const [prices, setPrices] = useState(initialPrices);\r\n  const [load, setLoad] = useState(true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      // <div style={{display: 'flex', justifyContent: 'space-around',  flexWrap: 'wrap'}}> \r\n      <div>\r\n      <SBox />\r\n      <Getprices prices={prices} sub={true} load={load} /> </div>\r\n      )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />, document.getElementById('root')\n);"],"sourceRoot":""}